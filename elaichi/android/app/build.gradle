plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
//    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keyStoreProperties = new Properties()
def keyStorePropertiesFile = rootProject.file('key.properties')
if (keyStorePropertiesFile.exists()) {
    keyStoreProperties.load(new FileInputStream(keyStorePropertiesFile))
}

def dartEnvironmentVariables = [
        ENV: null
];
if (project.hasProperty('dart-defines')) {
    dartEnvironmentVariables = dartEnvironmentVariables + project.property('dart-defines')
            .split(',')
            .collectEntries { entry ->
                def pair = URLDecoder.decode(entry).split('=')
                [(pair.first()): pair.last()]
            }
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    defaultConfig {
        applicationId "org.dscnitrourkela.elaichi"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keyStoreProperties['keyAlias']
            keyPassword keyStoreProperties['keyPassword']
            storeFile keyStoreProperties['storeFile'] ? file(keyStoreProperties['storeFile']) : null
            storePassword keyStoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            if (dartEnvironmentVariables.ENV == null) {
                signingConfig signingConfigs.debug
            } else {
                signingConfig signingConfigs.release
            }
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
    buildFeatures {
        viewBinding true
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }
}

flutter {
    source '../..'
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Swipe Refresh Layout
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // Material Design
    implementation 'com.google.android.material:material:1.3.0'

    // Architectural Components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"

//    // Lifecycle
//    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
//    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.1"
//    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.1"
//    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.1"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0'

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.1"

//    // Navigation Component
//    implementation "androidx.navigation:navigation-fragment-ktx:2.3.5"
//    implementation "androidx.navigation:navigation-ui-ktx:2.3.5"

    //OkHttp
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.2'

    //RetroFit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    //Gson
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // Activity KTX for viewModels()
    implementation "androidx.activity:activity-ktx:1.2.3"

    //Dagger - Hilt
    implementation 'com.google.dagger:hilt-android:2.37'
    annotationProcessor 'com.google.dagger:hilt-compiler:2.37'

    // Room
    implementation "androidx.room:room-runtime:2.3.0"
    kapt "androidx.room:room-compiler:2.3.0"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:2.3.0"

//    // Preferences DataStore
//    implementation "androidx.datastore:datastore-preferences:1.0.0-beta02"

    //JSoup
    implementation 'org.jsoup:jsoup:1.13.1'

    //Google Play Core
    implementation 'com.google.android.play:core:1.10.0'

    //Firebase
    implementation platform('com.google.firebase:firebase-bom:26.2.0')
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    //Ads
//    implementation 'com.google.android.gms:play-services-ads:20.2.0'

//    //WebKit
//    implementation 'androidx.webkit:webkit:1.4.0'
//
//    //Preference
//    implementation "androidx.preference:preference-ktx:1.1.1"
//
//    //Paging Library
//    implementation 'androidx.paging:paging-runtime-ktx:3.0.0'

    //Multidex Support
    implementation 'androidx.multidex:multidex:2.0.1'
}
